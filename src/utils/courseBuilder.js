/**
 * üìå –ú–æ–¥—É–ª—å createCourseStructure.js ‚Äî –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫—É—Ä—Å–∞.
 *
 * üîπ –û–ø–∏—Å–∞–Ω–∏–µ:
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–∞—Ä—Å–∏—Ç —Ñ–∞–π–ª –æ–≥–ª–∞–≤–ª–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞—ë—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ.
 *
 * üîπ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * ```js
 * import { createCourseStructure } from './createCourseStructure.js';
 * createCourseStructure('content.md', './output');
 * ```
 */

import fs from 'fs';
import path from 'path';

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
function sanitizeFilename(name) {
    return name.replace(/[\/:*?"<>|.]/g, '').trim();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫—É—Ä—Å–∞ (–≤ –ø–∞–ø–∫–µ `course/`)
export function createCourseStructure(inputFile, outputDir) {
    try {
        const content = fs.readFileSync(inputFile, 'utf8');
        const lines = content.split('\n');

        let moduleNumber = 0;
        let subNumber = 0;
        let currentModule = '';

        const createdFiles = new Set(); // –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤

        for (let line of lines) {
            line = line.trim();
            if (!line) continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

            if (line.startsWith('# ')) {
                // –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
                moduleNumber++;
                subNumber = 0;
                currentModule = `${moduleNumber} ${sanitizeFilename(line.replace('# ', '').trim())}`;
                const modulePath = path.join(outputDir, currentModule);

                if (!fs.existsSync(modulePath)) {
                    fs.mkdirSync(modulePath, { recursive: true });
                }
            } else if (line.startsWith('- ')) {
                // –ü–æ–¥–ø—É–Ω–∫—Ç –º–æ–¥—É–ª—è
                subNumber++;
                const filename = `${moduleNumber}.${subNumber} ${sanitizeFilename(line.replace('- ', '').trim())}.md`;
                const filePath = path.join(outputDir, currentModule, filename);

                if (!createdFiles.has(filePath)) {
                    createdFiles.add(filePath); // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
                    fs.writeFileSync(filePath, `${currentModule}\n${filename}`, 'utf8'); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è –≤ —Ñ–∞–π–ª
                }
            }
        }

        console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫—É—Ä—Å–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:', error);
    }
}
