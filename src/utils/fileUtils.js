/**
 * üìå –ú–æ–¥—É–ª—å fileUtils.js ‚Äî –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –∫–∞—Ç–∞–ª–æ–≥–∞–º–∏.
 *
 * üîπ –û–ø–∏—Å–∞–Ω–∏–µ:
 * –≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏: —á—Ç–µ–Ω–∏–µ, –∑–∞–ø–∏—Å—å, –æ—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞.
 *
 * üîπ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * ```js
 * import { sanitizeFileName, readDirectory, readFileContent, writeToFile } from './fileUtils.js';
 * ```
 */

import fs from 'fs';
import path from 'path';

/**
 * üìå –û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤.
 * @param {string} name - –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞.
 * @returns {string} - –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞.
 */
export function sanitizeFileName(name) {
    return name.replace(/[\/:*?"<>|.]/g, '').trim();
}

/**
 * üìå –ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
 * @param {string} directory - –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
 * @returns {fs.Dirent[]} - –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –∏–º–µ–Ω–∏.
 */
export function readDirectory(directory) {
    try {
        let files = fs.readdirSync(directory, { withFileTypes: true });
        return files.sort((a, b) => a.name.localeCompare(b.name, 'ru', { numeric: true }));
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${directory}:`, error);
        return [];
    }
}

/**
 * üìå –ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞.
 * @param {string} filePath - –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É.
 * @returns {string} - –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞.
 */
export function readFileContent(filePath) {
    try {
        return fs.readFileSync(filePath, 'utf8').trim();
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error);
        return '';
    }
}

/**
 * üìå –ó–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤ —Ñ–∞–π–ª.
 * @param {string} filePath - –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É.
 * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è —Ñ–∞–π–ª–∞.
 * @param {string} content - –¢–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏.
 */
export function writeToFile(filePath, title, content) {
    try {
        fs.writeFileSync(filePath, `# ${title}\n\n${content}`, 'utf8');
        console.log(`‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${filePath}`);
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error);
    }
}
