/**
 * üìå –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å main.js
 *
 * üîπ –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç:
 *   1. `build` ‚Äî —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–π–ª–∞ —Å –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ–º.
 *   2. `generate` ‚Äî —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø–æ–º–æ—â—å—é OpenAI –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–π–ª–æ–≤ –∫—É—Ä—Å–∞.
 *
 * üîπ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * ```sh
 * node src/main.js build <—Ñ–∞–π–ª_–æ–≥–ª–∞–≤–ª–µ–Ω–∏—è> <–≤—ã—Ö–æ–¥–Ω–∞—è_–ø–∞–ø–∫–∞>  # –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–∞
 * node src/main.js generate <–ø–∞–ø–∫–∞_–∫—É—Ä—Å–∞>                    # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
 * ```
 */

import { createCourseProject } from './utils/initProject.js';
import { createCourseStructure } from './utils/courseBuilder.js';
import { processDirectory } from './gpt/generator.js';
import { startServer } from './reader/index.js';
import path from 'path';
import fs from 'fs';
import { exportCourseToJson } from './utils/exportCourse.js';

// üìå –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const mode = process.argv[2]; // `init`, `build`, `generate`, `read`, `export`
const projectName = process.argv[3]; // –ù–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞

if (!mode || !projectName) {
  console.error('‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.error('  node src/main.js init <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫—É—Ä—Å–∞>         # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—É—Ä—Å–∞');
  console.error('  node src/main.js build <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫—É—Ä—Å–∞>        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫—É—Ä—Å–∞');
  console.error('  node src/main.js generate <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫—É—Ä—Å–∞>     # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
  console.error('  node src/main.js read <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫—É—Ä—Å–∞>         # –û—Ç–∫—Ä—ã—Ç—å –∫—É—Ä—Å –¥–ª—è —á—Ç–µ–Ω–∏—è');
  console.error('  node src/main.js export <–Ω–∞–∑–≤–∞–Ω–∏–µ_–∫—É—Ä—Å–∞>       # –≠–∫—Å–ø–æ—Ä—Ç –∫—É—Ä—Å–∞ –≤ JSON');
  process.exit(1);
}

// üìå –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –∏ –∫ `course/`
const projectPath = path.join(process.cwd(), projectName);
const coursePath = path.join(projectPath, 'course'); 

if (mode === 'init') {
  console.log(`üìÅ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –∫—É—Ä—Å–∞: ${projectName}`);
  createCourseProject(projectPath);
} else if (mode === 'build') {
  console.log(`üìÅ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É—Ä—Å–∞ –≤ –ø–∞–ø–∫–µ: ${coursePath}`);
  if (!fs.existsSync(coursePath)) fs.mkdirSync(coursePath, { recursive: true });
  createCourseStructure(path.join(projectPath, 'content.md'), coursePath);
} else if (mode === 'generate') {
  console.log(`ü§ñ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –ø–∞–ø–∫–µ: ${coursePath}`);
  processDirectory(projectPath)
    .then(() => console.log('üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))
    .catch((err) => console.error(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`));
} else if (mode === 'read') {
  if (!fs.existsSync(coursePath)) {
    console.error(`‚ùå –ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω: ${coursePath}`);
    process.exit(1);
  }
  startServer(coursePath);
} else if (mode === 'export') {  // –ù–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
  console.log(`üì§ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫—É—Ä—Å –∏–∑ –ø–∞–ø–∫–∏: ${coursePath} –≤ JSON`);
  exportCourseToJson(projectPath)
    .then(() => console.log('üéâ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!'))
    .catch((err) => console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: ${err.message}`));
} else {
  console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: ${mode}`);
  process.exit(1);
}
