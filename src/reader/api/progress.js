import fs from 'fs/promises';
import path from 'path';
import { config } from '../config.js';

export async function getLastRead(req, res) {
  try {
    const data = await fs.readFile(config.PROGRESS_FILE, 'utf8');
    const progress = JSON.parse(data);
    const lastRead = progress.lastRead || null;

    console.log(`üìñ –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: ${lastRead}`);

    // ‚úÖ –¢–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º **—Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É –ø—É—Ç–∏**, –∞ –Ω–µ JSON-–æ–±—ä–µ–∫—Ç
    res.json({ lastRead });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ñ–∞–π–ª–∞:', error);
    res.json({ lastRead: null });
  }
}

export async function saveLastRead(req, res) {
  const filePath = req.query.file;
  try {
    let progress = {};
    try {
      progress = JSON.parse(await fs.readFile(config.PROGRESS_FILE, 'utf8'));
    } catch {}

    progress.lastRead = filePath;
    await fs.writeFile(config.PROGRESS_FILE, JSON.stringify(progress, null, 2), 'utf8');
    res.sendStatus(200);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', error);
    res.status(500).send('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
  }
}
