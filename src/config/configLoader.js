/**
 * üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫—É—Ä—Å–∞.
 * 
 * üîπ –û–ø–∏—Å–∞–Ω–∏–µ:
 * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª `config.json` –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –∫—É—Ä—Å–∞.
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏, –ª–∏–º–∏—Ç—ã —Ç–æ–∫–µ–Ω–æ–≤, –∑–∞–¥–µ—Ä–∂–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ø—Ä–æ–º—Ç–æ–º.
 * 
 * üîπ –§—É–Ω–∫—Ü–∏–∏:
 * - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ `config.json`.
 * - –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–∞—Ä—Å–∏—Ç JSON.
 * - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å.
 * 
 * üîπ –ü—Ä–∏–º–µ—Ä `config.json`:
 * ```json
 * {
 *   "model": "gpt-4o",
 *   "max_tokens": 6048,
 *   "timeout_ms": 60000,
 *   "prompt_file": "prompt.txt"
 * }
 * ```
 * 
 * üîπ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * ```js
 * import { loadConfig } from './configLoader.js';
 * const config = loadConfig('./data/my_course');
 * console.log(config.model); // –í—ã–≤–µ–¥–µ—Ç "gpt-4o"
 * ```
 */

import fs from 'fs';
import path from 'path';

export function loadConfig(targetDirectory) {
    const configPath = path.join(targetDirectory, 'config.json');

    if (!fs.existsSync(configPath)) {
        console.error(`‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${configPath}`);
        process.exit(1);
    }

    try {
        const configContent = fs.readFileSync(configPath, 'utf8');
        const config = JSON.parse(configContent);

        console.log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ ${configPath}`);
        return config;
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${error.message}`);
        process.exit(1);
    }
}
